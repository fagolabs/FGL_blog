# Generated by Django 2.2.2 on 2019-06-29 17:56

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('basepost_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.BasePost')),
                ('title', models.CharField(max_length=2048)),
                ('feature_image', models.CharField(blank=True, max_length=2048)),
                ('status', models.CharField(choices=[('draft', 'draft'), ('draft_public', 'draft_public'), ('public', 'public')], default='draft', max_length=64)),
                ('slug', models.SlugField(blank=True, max_length=2048)),
                ('views', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('views_id', jsonfield.fields.JSONField(default={'view_users': []})),
                ('clips', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            bases=('base.basepost',),
        ),
        migrations.CreateModel(
            name='PostClipsUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='post.Post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
